plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.61'
}

group 'pokedexBack'
version '1.1'
sourceCompatibility = 1.8

//create a single Jar with all dependencies

jar {
    manifest {
        attributes 'Main-Class': 'com.pokedexBack.MainKt'
    }
    // Add this
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

repositories {
    mavenCentral()
}

ext {
    junitVersion = "5.1.0"
    ktormversion = "2.5"
    hibernateValidatorVersion = "6.0.7"
    kotlinx_serialization_version = '0.6.1'
}

dependencies {
    compile group: 'com.auth0', name: 'java-jwt', version: '2.0.1'
    compile 'com.auth0:java-jwt:3.9.0'
    compile group: 'com.googlecode.owasp-java-html-sanitizer', name: 'owasp-java-html-sanitizer', version: '20190503.1'
    compile "me.liuwj.ktorm:ktorm-core:${ktormversion}"
    compile 'com.google.firebase:firebase-admin:6.11.0'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.61"
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile "com.sparkjava:spark-kotlin:1.0.0-alpha"
    compile 'com.fasterxml.jackson.module:jackson-module-kotlin:2.9.0'
    compile group: "com.google.inject", name: "guice", "version": "4.2.2"
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile 'org.mockito:mockito-core:2.24.0'
    compile group: 'org.glassfish', name: 'javax.el', version: '3.0.0'
    testImplementation 'org.mockito:mockito-inline:2.13.0'
    compile 'javax.validation:validation-api:2.0.1.Final'
    compile "org.hibernate:hibernate-validator:${hibernateValidatorVersion}.Final"
    compile "org.hibernate:hibernate-validator-annotation-processor:${hibernateValidatorVersion}.Final"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    testCompileOnly 'junit:junit:4.12'
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:$junitVersion"
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.15'
    runtime "mysql:mysql-connector-java:8.0.15"
    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3'
    compile 'org.json:json:20160212'
    compile("io.github.rybalkinsd:kohttp:0.11.1")
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

apply plugin: "java"

repositories {
    jcenter()
}

configurations {
    ktlint
}

dependencies {
    ktlint "com.pinterest:ktlint:0.33.0"
    // additional 3rd party ruleset(s) can be specified here
    // just add them to the classpath (ktlint 'groupId:artifactId:version') and 
    // ktlint will pick them up
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/pinterest/ktlint#usage for more
}

check.dependsOn ktlint
kotlin.experimental.coroutines 'enable'


task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "-F", "src/**/*.kt"
}
